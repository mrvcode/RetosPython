maze = [
    ["üê≠", "‚¨õ", "‚¨õ", "‚¨õ", "‚¨õ", "‚¨õ"],
    ["‚¨ú", "‚¨õ", "‚¨õ", "‚¨õ", "‚¨ú", "‚¨õ"],
    ["‚¨ú", "‚¨õ", "‚¨õ", "‚¨õ", "‚¨ú", "‚¨õ"],
    ["‚¨ú", "‚¨ú", "‚¨ú", "‚¨ú", "‚¨ú", "‚¨ú"],
    ["‚¨õ", "‚¨ú", "‚¨õ", "‚¨ú", "‚¨õ", "‚¨õ"],
    ["‚¨õ", "‚¨ú", "‚¨õ", "‚¨ú", "‚¨ú", "üö™"]
]


def print_maze():
    for row in maze:
        print("".join(row))

    print()


mickey = [0, 0]

print_maze()

while True:

    print("Hacia donde se mueve Mickey?")
    print("[w] arriba")
    print("[s] abajo")
    print("[a] izquierda")
    print("[d] derecha")
    direction = input("Direcci√≥n: ")

    current_row, current_column = mickey
    new_row, new_column = current_row, current_column

    match direction:
        case "w":
            new_row = current_row - 1
        case "s":
            new_row = current_row + 1
        case "a":
            new_column = current_column - 1
        case "d":
            new_column = current_column + 1
        case _:
            print("Direcci√≥n no reconocida. Int√©ntalo de nuevo.\n")
            continue

    if new_row < 0 or new_row > 5 or new_column < 0 or new_column > 5:
        print("No puedes salir del laberinto. Int√©ntalo de nuevo.\n")
        print_maze()
        continue
    else:
        if maze[new_row][new_column] == "‚¨õ":
            print("No puedes pasar por paredes. Int√©ntalo de nuevo.\n")
            print_maze()
            continue
        elif maze[new_row][new_column] == "üö™":
            print("Has encontrado la salida!")
            maze[current_row][current_column] = "‚¨ú"
            maze[new_row][new_column] = "üê≠"
            print_maze()
            break
        else:
            maze[current_row][current_column] = "‚¨ú"
            maze[new_row][new_column] = "üê≠"
            mickey = [new_row, new_column]

    print_maze()
